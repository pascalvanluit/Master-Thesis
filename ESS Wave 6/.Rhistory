library(foreign)
library(tidyverse)
library(dplyr)
dataset <- read.spss("C:\\Users\\Gebruiker\\Documents\\Master\\Year 2\\Master Thesis\\ESS Wave 6\\ESS6e02_4.sav", to.data.frame = TRUE)
#Selecting the necessary variables:
dataset <- select(dataset, ppltrst, pplfair, pplhlp, sclmeet, inprdsc, sclact, pplahlp, flapppl, rehlppl, contplt, wrkprty, wrkorg, badge, sgnptit, pbldmn, bctprd, wkvlorg, imbgeco, imueclt, imwbcnt, imdfetn, trstprl, trstlgl, trstplc, trstplt, trstprt, trstep, trstun, stfgov, stfdem, stfedu, stfhlth)
dataset <- read.spss("C:\\Users\\Gebruiker\\Documents\\Master\\Year 2\\Master Thesis\\ESS Wave 6\\ESS6e02_4.sav", to.data.frame = TRUE)
#Selecting the necessary variables:
data <- select(dataset, ppltrst, pplfair, pplhlp, sclmeet, inprdsc, sclact, pplahlp, flapppl, rehlppl, contplt, wrkprty, wrkorg, badge, sgnptit, pbldmn, bctprd, wkvlorg, imbgeco, imueclt, imwbcnt, imdfetn, trstprl, trstlgl, trstplc, trstplt, trstprt, trstep, trstun, stfgov, stfdem, stfedu, stfhlth)
#Checking the average age:
mean(dataset$agea)
#Checking the average age:
mean(as.numeric(dataset$agea))
#Checking the average age:
mean(as.numeric(as.character(dataset$agea)))
max(dataset$agea)
max(as.numeric(as.character(dataset$agea)))
mean(as.numeric(dataset$agea))
mean(dataset$agea)
mean(as.numeric(as.character(dataset$agea)))
#Checking the average age:
mean(as.numeric(as.character(dataset$agea)), na.rm = TRUE)
?mean
dataset[,i] <- as.numeric(as.character(dataset[,i]), na.rm=TRUE)
for (i in 1:ncol(data)) {
data[,i] <- as.numeric(as.character(dataset[,i]), na.rm = TRUE)
}
warnings()
?efa
?cfa
library(lavaan)
?efa
?cfa
Model <- "Interpersonal_Trust =~ ppltrst + pplfair + pphlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ wrkprty + wrkorg + sgnptit + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt
Institutional_Trust =~ trstprl + trstlgl + trstplt + trstprt
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth"
fit <- cfa(model = Model, data = data)
data
# Selecting the necessary variables:
data <- select(dataset, ppltrst, pplfair, pplhlp, sclmeet, inprdsc, sclact, pplahlp, flapppl, rehlppl, contplt, wrkprty, wrkorg, badge, sgnptit, pbldmn, bctprd, wkvlorg, imbgeco, imueclt, imwbcnt, imdfetn, trstprl, trstlgl, trstplc, trstplt, trstprt, trstep, trstun, stfgov, stfdem, stfedu, stfhlth)
data
View(data)
#Recoding entries to all be numbers:
data$ppltrst[data$ppltrst == "You can't be too careful"] <- 0
?mutate
# Selecting the necessary variables:
data <- select(dataset, ppltrst, pplfair, pplhlp, sclmeet, inprdsc, sclact, pplahlp, flapppl, rehlppl, contplt, wrkprty, wrkorg, badge, sgnptit, pbldmn, bctprd, wkvlorg, imbgeco, imueclt, imwbcnt, imdfetn, trstprl, trstlgl, trstplc, trstplt, trstprt, trstep, trstun, stfgov, stfdem, stfedu, stfhlth)
library(tidyverse)
data[data$ppltrst == "You can't be too careful"] <- 0
?mean
data <- %>%
ppltrst == "You can't be too careful" <- 0
data <- %>%
data$ppltrst == "You can't be too careful" <- 0
data <- %>%
data$ppltrst == "You can't be too careful" <- 0
library(plyr)
library(plyr)
library(dplyr)
library(haven)
?read_spss
dataset <- read_spss("C:\\Users\\Gebruiker\\Documents\\Master\\Year 2\\Master Thesis\\ESS Wave 6\\ESS6e02_4.sav")
# Selecting the necessary variables:
data <- select(dataset, ppltrst, pplfair, pplhlp, sclmeet, inprdsc, sclact, pplahlp, flapppl, rehlppl, contplt, wrkprty, wrkorg, badge, sgnptit, pbldmn, bctprd, wkvlorg, imbgeco, imueclt, imwbcnt, imdfetn, trstprl, trstlgl, trstplc, trstplt, trstprt, trstep, trstun, stfgov, stfdem, stfedu, stfhlth)
View(data)
mean(dataset$agea)
mean(dataset$agea, na.rm = TRUE)
# Selecting the necessary variables:
data <- select(dataset, ppltrst, pplfair, pplhlp, sclmeet, inprdsc, sclact, pplahlp, flapppl, rehlppl, contplt, wrkprty, wrkorg, badge, sgnptit, pbldmn, bctprd, wkvlorg, imbgeco, imueclt, imwbcnt, imdfetn, trstprl, trstlgl, trstplc, trstplt, trstprt, trstep, trstun, stfgov, stfdem, stfedu, stfhlth)
#Getting a model fit:
fit <- cfa(model = Model, data = data)
?cfa
sum(is.na(data$ppltrst))
sum(is.na(data))
54673*32
Model <- "Interpersonal_Trust =~ ppltrst + pplfair + pplhlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ wrkprty + wrkorg + sgnptit + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt
Institutional_Trust =~ trstprl + trstlgl + trstplt + trstprt
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth"
#Getting a model fit:
fit <- cfa(model = Model, data = data)
summary(fit, fit.measures = TRUE)
?cfa
#Getting a model fit:
fit <- cfa(model = Model, data = data, mimic = "Mplus")
#Getting a model fit:
fit <- cfa(model = Model, data = data, mimic = "Mplus")
summary(fit, fit.measures = TRUE)
ModelEFA <- "Interpersonal_Trust =~ ppltrst + pplfair + pphlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ contplt + wrkprty + wrkorg + badge + sgnptit + pbldmn + bctprd + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt + imdfetn
Institutional_Trust =~ trstprl + trstlgl + trstplc + trstplt + trstprt + trstep + trstun
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth"
ModelCFA <- "Interpersonal_Trust =~ ppltrst + pplfair + pplhlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ wrkprty + wrkorg + sgnptit + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt
Institutional_Trust =~ trstprl + trstlgl + trstplt + trstprt
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth"
#Getting a model fit:
fit <- cfa(model = ModelEFA, data = data, mimic = "Mplus")
ModelEFA <- "Interpersonal_Trust =~ ppltrst + pplfair + pplhlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ contplt + wrkprty + wrkorg + badge + sgnptit + pbldmn + bctprd + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt + imdfetn
Institutional_Trust =~ trstprl + trstlgl + trstplc + trstplt + trstprt + trstep + trstun
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth"
#Getting a model fit:
fitEFA <- cfa(model = ModelEFA, data = data, mimic = "Mplus")
summary(fitEFA, fit.measures = TRUE)
#Getting a model fit:
fitEFA <- cfa(model = ModelEFA, data = data, mimic = "Mplus")
#Getting a model fit:
fitEFA <- cfa(model = ModelEFA, data = data)
summary(fitEFA, fit.measures = TRUE)
# CFA:
fitCFA <- cfa(model = ModelCFA, data = data)
summary(fitEFA, fit.measures = TRUE)
summary(fitCFA, fit.measures = TRUE)
ModelHigh <- "# Measurement model:
Interpersonal_Trust =~ ppltrst + pplfair + pplhlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ wrkprty + wrkorg + sgnptit + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt
Institutional_Trust =~ trstprl + trstlgl + trstplt + trstprt
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth
# Regressions
micro ~ Interpersonal_Trust + Density_of_Social_Relations + Social_Support
meso ~ Participation + Openness
macro ~ Institutional_Trust + Legitimacy_of_Institutions
cohesion ~ micro + meso + macro"
# Higher-order factor analysis:
fit <- lavaan::cfa(ModelHigh, data = data)
ModelHigh <- "# Measurement model:
Interpersonal_Trust =~ ppltrst + pplfair + pplhlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ wrkprty + wrkorg + sgnptit + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt
Institutional_Trust =~ trstprl + trstlgl + trstplt + trstprt
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth
# Regressions
micro =~ Interpersonal_Trust + Density_of_Social_Relations + Social_Support
meso =~ Participation + Openness
macro =~ Institutional_Trust + Legitimacy_of_Institutions
cohesion =~ micro + meso + macro"
# Higher-order factor analysis:
fit <- lavaan::cfa(ModelHigh, data = data)
library(semPlot)
semPaths(fit)
semPaths(fit, title = FALSE, curvePivot = TRUE)
semPaths(fit)
install.packages("semTools")
library(semTools)
?orthRotate
?efaUnrotate
# EFA:
unrotated <- efaUnrotate(data = data, nf = 24)
# EFA:
unrotated <- efaUnrotate(data = data, nf = 24)
?mea
?mean
?orthRotate
oblqRotate(unrotated, method = "geomin")
# EFA:
unrotated <- efaUnrotate(data = data, nf = 24)
?cfa
summary(fitCFA, fit.measures = TRUE)
shiny::runApp('~/Master/Year 2/JASP/TheBayesShinyApp5/BayesianLearningCycle')
summary(fitCFA, fit.measures = TRUE)
?cfa
summary(fitCFA)
summary(fitHigh)
#################################
# Higher-order factor analysis: #
#################################
fitHigh <- cfa(model = ModelHigh, data = data)
fitCFA$RMSEA
summary(fitCFA, fit.measures = TRUE)
fitCFA <- summary(fitCFA, fit.measures = TRUE)
fitCFA$RMSEA
summary(fitCFA, fit.measures = TRUE)
########
# CFA: #
########
fitCFA <- cfa(model = ModelCFA, data = data)
summary(fitCFA, fit.measures = TRUE)
fitCFA$RMSEA
fitCFA$SRMR
summary(fitCFA, fit.measures = TRUE)
?fa
#Method 1:
efa <- fa(data)
library(psych)
#Method 1:
efa <- fa(data)
fa.diagram(efa)
#Method 1:
efa <- fa(data, nfactors = 24)
#Method 1:
efa <- fa(data, nfactors = 24, rotate = "geominQ")
fa.diagram(efa)
ModelCFA <- "Interpersonal_Trust =~ ppltrst + pplfair + pplhlp
Density_of_Social_Relations =~ sclmeet + inprdsc + sclact
Social_Support =~ pplahlp + flapppl + rehlppl
Participation =~ wrkprty + wrkorg + sgnptit + wkvlorg
Openness =~ imbgeco + imueclt + imwbcnt
Institutional_Trust =~ trstprl + trstlgl + trstplt + trstprt
Legitimacy_of_Institutions =~ stfgov + stfdem + stfedu + stfhlth"
########
# CFA: #
########
fitCFA <- cfa(model = ModelCFA, data = data)
summary(fitCFA, fit.measures = TRUE)
summary(fitCFA, fit.measures = TRUE, standardized = TRUE)
?sample/
daf
?sample
#Trying with half the dataset (n = 27,103)
halfdata <- sample(data, size = 27103, replace = FALSE)
dim(data)
#Trying with half the dataset (n = 27,103)
halfdata <- sample(data[,1:32], size = 27103, replace = FALSE)
#Trying with half the dataset (n = 27,103)
halfdata <- sample(data[,1:32], size = 27103)
library(caTools)
?floor
#Trying with half the dataset (n = 27,103) using caTools
halfdata <- floor(0.5 * nrow(data))
halfdat
halfdata
set.seed(273)
#making training and test set:
train <- data[halfdata,]
test <- data[-halfdata,]
fitCFAhalf <- cfa(model = modelCFA, data = train)
fitCFAhalf <- cfa(model = ModelCFA, data = train)
fitCFAhalf <- cfa(model = ModelCFA, data = test)
train
summary(fitCFAhalf,
fit.measures = TRUE,
standardized = TRUE)
?is.na
summary(fitHigh)
summary(fitHigh,
fit.measures = TRUE,
standardized = TRUE)
fitCFAhalf <- cfa(model = ModelCFA, data = test, mimic = "mplus")
# Method 1: https://tkaiser.science/esemR.html
fa.parallel(data)
efa <- fa(data, nfactors = 7, rotate = "geominQ")
fa.diagram(efa)
summary(efa)
scores(efa)
loadings(efa)
efa <- fa(data, nfactors = 7, rotate = "geominQ", fm = "WLS")
?efa <- fa(data, nfactors = 7, rotate = "geominQ", )
?fa
efa <- fa(data, nfactors = 7, rotate = "geominQ", fm = "wls")
loadings(efa)
summary(efa)
efa$rms
efa$crms
# Trying with half the dataset:
halfdata <- floor(0.5 * nrow(data)) # Half the data, rounded
hallfdata
halfdata
# Trying with half the dataset:
halfdata <- sample(nrow(data), floor(0.5 * nrow(data))) # Half the data, rounded
halfdata
# Making training and test set:
train <- data[halfdata,]
test <- data[-halfdata,]
fitCFAhalf <- cfa(model = ModelCFA, data = test, mimic = "mplus")
#################################
# Higher-order factor analysis: #
#################################
fitHigh <- cfa(model = ModelHigh, data = data)
#################################
# Higher-order factor analysis: #
#################################
fitHigh <- cfa(model = ModelHigh, data = data, mimic = "mplus")
